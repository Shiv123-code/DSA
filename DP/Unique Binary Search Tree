class Solution {
public:
      int slove(int n,vector<int>& dp){
          if(n<=1)
        return 1;
        int ans=0;
        if(dp[n]!=-1)
        return dp[n];
        //return dp[n]
        for(int i=1;i<=n;i++){
            ans+=slove(i-1,dp)*slove(n-i,dp);
        }
        return dp[n]= ans;
      }
      //bottom up approches
      int slovetab(int n){
        vector<int> dp(n+1,0);
        dp[0]=dp[1]=1;
        //i no of nodes 
        for(int i=2;i<=n;i++){
            // j root node
            for(int j=1;j<=i;j++){
                dp[i]+=dp[j-1]*dp[i-j];
            }
        }
        return dp[n];
      }
    int numTrees(int n) {
        //vector<int> dp(n+1,-1);
        //return slove(n,dp);
        return slovetab(n);
    }
};
