class Solution {
public:
    bool issafe(int row,int col,vector<vector<char>>&board,char val){
        for(int i=0;i<9;i++){
            if(board[i][col]==val)
            return false;
            if(board[row][i]==val)
                return false;
            if(board[3*(row/3)+i/3][3*(col/3)+i%3]==val)
            return false;
        }
        return true;
    }
       bool slove(vector<vector<char>>&board)
       {
        int n=board.size();
        int m=board[0].size();
        for(int row=0;row<n;row++){
            for(int col=0;col<m;col++){
                if(board[row][col]=='.'){
                    for(char val='1';val<='9';val++){
                        if(issafe(row,col,board,val)){
                            board[row][col]=val;
                            int nextsloution=slove(board);
                            if(nextsloution==true){
                                return true;
                            }
                            else{
                                board[row][col]='.';
                            }
                        }
                    }
                    return false;
                }
            }
        }
        return true;
       }
    void solveSudoku(vector<vector<char>>& board) {
         slove(board);
    }
};
