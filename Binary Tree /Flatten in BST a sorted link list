void order(TreeNode<int>* root,vector<int> &in){
     if(root==NULL){
         return ;
     }
     order(root->left,in);
     in.push_back(root->data);
     order(root->right,in);
 }
 TreeNode<int> *flatten(TreeNode<int> *root) {
     vector<int> inorderval;
     order(root, inorderval);
     int n = inorderval.size();
     TreeNode<int>* newRoot = new TreeNode<int>(inorderval[0]);
     TreeNode<int>* curr = newRoot;
     for (int i = 1; i < n; i++){
         TreeNode<int> *temp= new TreeNode<int>(inorderval[i]);
         curr->left=NULL;
         curr->right=temp;
         curr=temp;
     }
     curr->left=NULL;
     curr->right=NULL;
     return newRoot;
 
}
