class Solution {
public: 
     /* const int MOD = 1e9 + 7;
   int slovemem(int dice, int face, int target, vector<vector<int>>& dp) {
    if (dice == 0) return target == 0 ? 1 : 0;
    if (target < 0) return 0;

    if (dp[dice][target] != -1)
        return dp[dice][target];

    int ans = 0;
    for (int i = 1; i <= face; i++) {
        ans = (ans + slovemem(dice - 1, face, target - i, dp)) % MOD;
    }

    return dp[dice][target] = ans;
}*/
    const int MOD = 1e9 + 7;
    int numRollsToTarget(int n, int k, int target) {
       /* vector<vector<int>> dp(n+1,vector<int>( target+1,-1));
        return slovemem(n,k,target,dp);*/
        vector<vector<int>> dp(n+1, vector<int>(target+1, 0));
        for(int i=0; i<=target; i++){
            if(i != 0) {dp[0][i] = 0;}
            else {dp[0][i] = 1;}
        }
        for(int i=1; i<=n; i++){
            for(int j=0; j<=target; j++){
                int ans = 0;
                for(int f=1; f<=k; f++){
                    if(j-f >= 0) ans = (ans + dp[i-1][j-f]) % MOD;
                }
                dp[i][j] = ans;
            }
        }
        return dp[n][target];
    }
};
