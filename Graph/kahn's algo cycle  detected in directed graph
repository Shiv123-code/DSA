#include <bits/stdc++.h> 
#include<unordered_map>
#include<list>
bool isCyclic(vector<vector<int>>& edges, int v, int e)
{
	unordered_map<int ,list<int>> adj;
    for(int i=0;i<edges.size();i++){
        int u=edges[i][0];
        int v=edges[i][1];
        adj[u].push_back(v);
    }
        //indegree
        vector<int> indegree(v);
        for(auto i:adj){
            for(auto j:i.second){
                indegree[j]++;
            }
        }
        queue<int> q;
        for(int i=0;i<v;i++){
            if(indegree[i]==0){
                q.push(i);
            }
        }
		int cnt=0;
        while(!q.empty()){
            int front=q.front();
            q.pop();
			cnt++;
            for(auto neg:adj[front]){
                indegree[neg]--;
                if(indegree[neg]==0){
                    q.push(neg);
                }
            }
        }
        if(cnt==v)
			return false;
		else
			return true;
}
