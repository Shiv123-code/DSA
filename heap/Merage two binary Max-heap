class Solution{
    public:
     void heapfiy (vector<int> &arr,int n,int i){
     int largest=i;
     int left=2*i+1;
     int right=2*i+2;
     if(left< n && arr[largest]<arr[left]){
        largest=left;
     }
     if(right < n && arr[largest]<arr[right]){
        largest=right;
     }
     if(largest!=i){
        swap(arr[i],arr[largest]);
        heapfiy(arr,n,largest);
     }
}
    vector<int> mergeHeaps(vector<int> &a, vector<int> &b, int n, int m) {
        // your code here
        vector<int> ans;
        for(auto e:a)
        ans.push_back(e);
        for(auto t:b)
        ans.push_back(t);
        int s=ans.size();
        for(int i=s/2-1;i>=0;i--){
            heapfiy(ans,s,i);
        }
        return ans;
    }
};
