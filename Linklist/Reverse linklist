class Solution {
public:
     ListNode* reverse(ListNode*head)
      {
          //base case
          if(head==NULL || head->next==NULL)
          {
            return head;
          }
          ListNode*smallnode=reverse(head->next);
          head->next->next=head;
          head->next=NULL;
          return smallnode;
      }
   ListNode* reverseList(ListNode* head) {
    return reverse(head);
      /*  if(head==NULL ||head->next==NULL)
        {
            return head;
        }
        ListNode* prev=NULL;
        ListNode* curr=head;
         ListNode*forward=NULL;
        while(curr!=NULL)
        {
            forward=curr->next;
            curr->next=prev;
            prev=curr;
             curr=forward;
        }
        return prev;*/
    }
};
