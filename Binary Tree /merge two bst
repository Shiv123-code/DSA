void inorder(TreeNode*root,vector<int>&in){
    if(root==NULL)
    return;
    inorder(root->left,in);
    in.push_back(root->data);
    inorder(root->right,in);
}

vector<int> mergeBST(TreeNode *root1, TreeNode *root2)
{
    // Write your code here.
    vector<int> ans;
    vector<int> v1,v2;
    inorder(root1,v1);
    inorder(root2,v2);
    int i=0,j=0;
    int n=v1.size(),m=v2.size();
    while(i<n && j< m){
        if(v1[i]< v2[j]){
            ans.push_back(v1[i++]);
        }
        else{
            ans.push_back(v2[j++]);
        }
    }
    while(i<n){
        ans.push_back(v1[i++]);
    }
     while(j<m){
         ans.push_back(v2[j++]);
     }
     return ans;
}
