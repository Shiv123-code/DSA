class Solution {
  public:
        int nodescount(struct Node* root){
            if(root==NULL){
               return 0;
            }
            int ans=1+nodescount(root->left)+nodescount(root->right);
            return ans;
        }
        bool isCBT(struct Node* root,int index,int count){
            if(root==NULL){
                return true;
            }
            if(index>=count){
                return false;
            }
            bool left=isCBT(root->left,2*index+1,count);
            bool right=isCBT(root->right,2*index+2,count);
            return (left && right);
        }
        bool isMax(struct Node* root){
            if(root->left==NULL && root->right==NULL){
                return true;
            }
            if(root->right==NULL){
                return (root->data > root->left->data);
            }
            else{
                bool left=isMax(root->left);
                bool right=isMax(root->right);
        return(left && right && root->data > root->left->data && root->data > root->right->data);
            }
        }
    bool isHeap(struct Node* root) {
        // code here
        int index=0;
        int totalcount=nodescount(root);
        if(isCBT(root,index,totalcount) && isMax(root)){
            return true;
        }
        else{
            return false;
        }
    }
};
