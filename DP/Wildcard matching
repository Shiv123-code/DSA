class Solution {
public:
      bool slove(string &str,string &pattern,int i,int j,vector<vector<int>> &dp){
       if(i<0 && j<0) return true;

        if(i>=0 && j<0) return false;

        if(i<0 && j>=0){
          for(int k=0;k<=j;k++){
            if(pattern[k]!='*') return false;
            }
         return true;
        }

         if(dp[i][j]!=-1)  return dp[i][j];

     if(str[i]==pattern[j] || pattern[j]=='?'){
       return dp[i][j]=slove(str,pattern,i-1,j-1,dp);
     }
    else if(pattern[j]=='*'){
    return dp[i][j]=(slove(str,pattern,i,j-1,dp)||slove(str,pattern,i-1,j,dp));
    }
    else
    return dp[i][j]=false;
 }
 bool slove(string & str,string & pattern){
       vector<vector<int>> dp(str.length()+1,vector<int>(pattern.length()+1,0));
       dp[0][0]=true;
       for(int j=1;j<=pattern.length();j++){
          bool flag=true;
           for(int k=1;k<=j;k++){
            if(pattern[k-1]!='*'){
            flag =false;
            break;
           }
        }
         dp[0][j]=flag;
        }
        for(int i=1;i<=str.length();i++){
            for(int j=1;j<=pattern.length();j++){
        if(str[i-1]==pattern[j-1] || pattern[j-1]=='?'){
          dp[i][j]=dp[i-1][j-1];
         }
    else if(pattern[j-1]=='*'){
     dp[i][j]=(dp[i][j-1]||dp[i-1][j]);
    }
    else
       dp[i][j]=false;
    }
    }
    return dp[str.length()][pattern.length()];
 }
    bool isMatch(string s, string p) {
        //vector<vector<int>> dp(s.length(),vector<int>(p.length(),-1));
        // return slove(s,p,s.length()-1,p.length()-1,dp);
        return slove(s,p);
    }
};
